# 项目启动规则

## 开始工作前必读

### 1. 项目架构理解
在开始任何开发工作前，必须首先阅读并理解项目架构文档：

**必读文档路径**：`docs/01_guideline/目录架构.md`

**文档内容包括**：
- 项目整体架构设计
- 目录结构规范
- 技术栈选择
- 开发环境配置
- 部署架构说明

### 2. 架构检查清单
在开始工作前，确认以下内容：

#### 2.1 目录结构检查
- [ ] 了解 `backend/` 目录的Django应用结构
- [ ] 熟悉 `frontend/` 目录的Vue3项目结构
- [ ] 理解 `tests/` 目录的测试层级划分
- [ ] 掌握 `docs/` 目录的文档组织方式

#### 2.2 技术栈确认
- [ ] 后端：Django + Django REST Framework
- [ ] 前端：Vue3 + TypeScript + Vite
- [ ] 数据库：PostgreSQL + Redis
- [ ] 测试：pytest + Vitest + Playwright
- [ ] 部署：Docker + Kubernetes

#### 2.3 开发规范回顾
- [ ] 代码风格规则（见 `code_quality.mdc`）
- [ ] Django应用拆分规则（见 `django_split.mdc`）
- [ ] 测试覆盖率要求（见 `test_coverage.mdc`）
- [ ] 安全扫描规则（见 `security_scan.mdc`）

### 3. 快速启动检查
在开始具体任务前：

1. **阅读架构文档**：打开 `docs/01_guideline/目录架构.md`
2. **确认工作范围**：明确是在backend、frontend还是devops
3. **检查相关规则**：根据工作类型查看对应的.mdc规则文件
4. **环境验证**：确保开发环境已正确配置

### 4. 工作模式
- **新功能开发**：先理解相关模块架构，再开始编码
- **Bug修复**：先定位问题模块，再查看对应测试用例
- **重构优化**：先确认影响范围，再制定重构计划
- **文档更新**：先检查文档结构，再补充相关内容

### 5. 提醒机制
每次新对话开始时，AI助手将：
1. 自动检查项目架构文档的存在性
2. 提醒开发者先阅读架构文档
3. 根据具体任务类型推荐相关规则文件
4. 提供快速导航到相关文档的链接
