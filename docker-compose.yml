# 开发环境 Docker 编排模板
# 重要：此项目使用 Docker 开发环境，不是宿主机开发
# 环境变量通过此文件配置，不需要本地 .env 文件
# 依赖通过 Dockerfile 管理，不需要本地 .venv

version: "3.8"

services:
  # 数据库服务
  mysql:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: bravo_local
      MYSQL_USER: bravo_user
      MYSQL_PASSWORD: bravo_password
      MYSQL_ROOT_PASSWORD: root_password
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis 服务
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # 后端服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=bravo.settings.test
      - DATABASE_URL=mysql://bravo_user:bravo_password@mysql:3306/bravo_test
      - DB_NAME=bravo_test
      - DB_USER=bravo_user
      - DB_PASSWORD=bravo_password
      - DB_HOST=mysql
      - DB_PORT=3306
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./backend:/app
      - backend_logs:/app/logs
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: python manage.py runserver 0.0.0.0:8000

  # 前端服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:8000
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules  # 使用命名volume避免覆盖依赖
    command: npm run dev -- --host 0.0.0.0

  # Celery Worker
  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    environment:
      - DJANGO_SETTINGS_MODULE=bravo.settings.local
      - DATABASE_URL=mysql://bravo_user:bravo_password@mysql:3306/bravo_test
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./backend:/app
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A bravo worker -l info

  # Celery Beat
  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    environment:
      - DJANGO_SETTINGS_MODULE=bravo.settings.local
      - DATABASE_URL=mysql://bravo_user:bravo_password@mysql:3306/bravo_test
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./backend:/app
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A bravo beat -l info

  # E2E测试服务（模拟GitHub Actions环境）
  e2e:
    build:
      context: ./e2e
      dockerfile: Dockerfile.dev
    working_dir: /app
    environment:
      - CI=true
      - GITHUB_ACTIONS=true
      - NODE_ENV=test
      - DOCKER_ENV=true
      - TEST_BASE_URL=http://frontend:3000
    volumes:
      - ./e2e:/app
      - e2e_node_modules:/app/node_modules
    ports:
      - "9323:9323"  # Playwright UI端口
    command: npm run test
    depends_on:
      - frontend
      - backend

volumes:
  mysql_data:
  redis_data:
  backend_logs:
  frontend_node_modules:
  e2e_node_modules:
