#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

echo "🔄 Post-checkout 钩子启动..."

# 获取参数
old_head=$1
new_head=$2
branch_checkout=$3

# 设置环境变量供 Python 脚本使用
export GIT_PARAMS="$old_head $new_head $branch_checkout"

# 运行 post-checkout 检查
if [ -f "scripts/post_checkout_handler.py" ]; then
    echo "🐍 运行 post-checkout 检查脚本..."
    python scripts/post_checkout_handler.py
    if [ $? -eq 0 ]; then
        echo "✅ Post-checkout 检查完成"
    else
        echo "⚠️  Post-checkout 检查发现问题，但不影响分支切换"
    fi
else
    echo "⚠️  Post-checkout 检查脚本不存在"
fi

# 分支切换后的额外处理
if [ "$branch_checkout" = "1" ]; then
    echo "🌿 分支切换完成，执行额外处理..."
    
    # 检查是否需要安装依赖
    if [ -f "frontend/package.json" ] && [ ! -d "frontend/node_modules" ]; then
        echo "📦 检测到前端依赖缺失，建议运行: cd frontend && npm install"
    fi
    
    # 检查是否需要创建虚拟环境
    if [ -f "backend/requirements.txt" ] && [ ! -d "backend/.venv" ]; then
        echo "🐍 检测到后端虚拟环境缺失，建议运行: cd backend && python -m venv .venv"
    fi
    
    # 显示当前分支信息
    current_branch=$(git rev-parse --abbrev-ref HEAD)
    echo "📍 当前分支: $current_branch"
    
    # 如果是保护分支，显示警告
    if [ "$current_branch" = "main" ] || [ "$current_branch" = "dev" ]; then
        echo "🛡️  警告: 您正在保护分支上，请谨慎操作"
    fi
fi

echo "✅ Post-checkout 处理完成"
