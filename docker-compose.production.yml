version: "3.8"

services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: bravo-mysql-prod
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-secure_root_password_2024}
      MYSQL_DATABASE: ${DB_NAME:-bravo_production}
      MYSQL_USER: ${DB_USER:-bravo}
      MYSQL_PASSWORD: ${DB_PASSWORD:-secure_db_password_2024}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "3306:3306"
    networks:
      - bravo-network
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: bravo-redis-prod
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - bravo-network
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Django后端
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.production
    container_name: bravo-backend-prod
    environment:
      - DJANGO_SETTINGS_MODULE=bravo.settings.production
      - DB_HOST=mysql
      - DB_NAME=${DB_NAME:-bravo_production}
      - DB_USER=${DB_USER:-bravo}
      - DB_PASSWORD=${DB_PASSWORD:-secure_db_password_2024}
      - REDIS_HOST=redis
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY:-change-this-secret-key-in-production}
      - EMAIL_HOST=${EMAIL_HOST:-smtp.gmail.com}
      - EMAIL_USER=${EMAIL_USER:-}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD:-}
      - SENTRY_DSN=${SENTRY_DSN:-}
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - static_files:/app/staticfiles
      - media_files:/app/mediafiles
      - django_logs:/var/log/django
    networks:
      - bravo-network
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Vue.js前端
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.production
    container_name: bravo-frontend-prod
    environment:
      - NODE_ENV=production
      - VITE_API_BASE_URL=https://8.129.16.190/api
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - static_files:/usr/share/nginx/html/static
      - media_files:/usr/share/nginx/html/media
    networks:
      - bravo-network
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery工作者
  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile.production
    container_name: bravo-celery-prod
    command: celery -A bravo worker -l info --concurrency=2
    environment:
      - DJANGO_SETTINGS_MODULE=bravo.settings.production
      - DB_HOST=mysql
      - DB_NAME=${DB_NAME:-bravo_production}
      - DB_USER=${DB_USER:-bravo}
      - DB_PASSWORD=${DB_PASSWORD:-secure_db_password_2024}
      - REDIS_HOST=redis
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY:-change-this-secret-key-in-production}
    volumes:
      - ./backend:/app
      - media_files:/app/mediafiles
      - celery_logs:/var/log/celery
    networks:
      - bravo-network
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  # Celery Beat调度器
  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile.production
    container_name: bravo-celery-beat-prod
    command: celery -A bravo beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    environment:
      - DJANGO_SETTINGS_MODULE=bravo.settings.production
      - DB_HOST=mysql
      - DB_NAME=${DB_NAME:-bravo_production}
      - DB_USER=${DB_USER:-bravo}
      - DB_PASSWORD=${DB_PASSWORD:-secure_db_password_2024}
      - REDIS_HOST=redis
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY:-change-this-secret-key-in-production}
    volumes:
      - ./backend:/app
      - celery_beat_data:/app/celerybeat-schedule
    networks:
      - bravo-network
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  # Nginx反向代理（如果需要的话）
  nginx-proxy:
    image: nginx:alpine
    container_name: bravo-nginx-proxy-prod
    ports:
      - "8080:80"
    volumes:
      - ./nginx/proxy.conf:/etc/nginx/nginx.conf:ro
    networks:
      - bravo-network
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    profiles: ["with-proxy"]

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  static_files:
    driver: local
  media_files:
    driver: local
  django_logs:
    driver: local
  celery_logs:
    driver: local
  celery_beat_data:
    driver: local

networks:
  bravo-network:
    driver: bridge
