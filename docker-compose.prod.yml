# 生产环境部署配置 - 使用预构建镜像
# 支持多环境部署（bravo-dev / bravo-prod）
#
# 使用方式:
#   Dev环境:  COMPOSE_PROJECT_NAME=bravo-dev IMAGE_TAG=dev MYSQL_PORT=3307 REDIS_PORT=6380 BACKEND_PORT=8001 FRONTEND_HTTP_PORT=8080 FRONTEND_HTTPS_PORT=8443 docker-compose -f docker-compose.prod.yml up -d
#   Prod环境: COMPOSE_PROJECT_NAME=bravo-prod IMAGE_TAG=latest docker-compose -f docker-compose.prod.yml up -d
#
# 环境变量配置（可选，默认为prod环境）:
#   COMPOSE_PROJECT_NAME: 项目名称前缀，决定容器名和卷名
#   IMAGE_TAG: Docker镜像标签 (dev环境用'dev', prod环境用'latest'或版本号)
#   REGISTRY: 镜像仓库地址 (默认阿里云杭州)
#   MYSQL_PORT: MySQL外部端口 (默认3306, dev建议3307)
#   REDIS_PORT: Redis外部端口 (默认6379, dev建议6380)
#   BACKEND_PORT: Backend外部端口 (默认8000, dev建议8001)
#   FRONTEND_HTTP_PORT: Frontend HTTP外部端口 (默认80, dev建议8080)
#   FRONTEND_HTTPS_PORT: Frontend HTTPS外部端口 (默认443, dev建议8443)
#   DJANGO_SECRET_KEY: Django密钥（必需）

services:
  # MySQL - 内存优化配置
  mysql:
    image: mysql:8.0
    container_name: ${COMPOSE_PROJECT_NAME:-bravo-prod}-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-bravo_prod_2024}
      MYSQL_DATABASE: ${DB_NAME:-bravo_production}
      MYSQL_USER: ${DB_USER:-bravo}
      MYSQL_PASSWORD: ${DB_PASSWORD:-bravo_pass_2024}
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    command: >
      --default-authentication-plugin=mysql_native_password
      --max_connections=50
      --innodb_buffer_pool_size=128M
      --innodb_log_file_size=32M
      --performance_schema=OFF
    deploy:
      resources:
        limits:
          memory: 400M
        reservations:
          memory: 200M
    restart: unless-stopped

  # Redis - 轻量配置
  redis:
    image: redis:7-alpine
    container_name: ${COMPOSE_PROJECT_NAME:-bravo-prod}-redis
    command: redis-server --maxmemory 100mb --maxmemory-policy allkeys-lru
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    deploy:
      resources:
        limits:
          memory: 150M
        reservations:
          memory: 50M
    restart: unless-stopped

  # Django后端 - 使用预构建镜像
  backend:
    image: ${REGISTRY:-registry.cn-hangzhou.aliyuncs.com}/bravo-project/backend:${IMAGE_TAG:-latest}
    container_name: ${COMPOSE_PROJECT_NAME:-bravo-prod}-backend
    environment:
      - DJANGO_SETTINGS_MODULE=bravo.settings.production
      - DB_NAME=${DB_NAME:-bravo_production}
      - DB_USER=${DB_USER:-bravo}
      - DB_PASSWORD=${DB_PASSWORD:-bravo_pass_2024}
      - DB_HOST=mysql
      - DB_PORT=3306
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SECRET_KEY=${DJANGO_SECRET_KEY}
      - DEBUG=False
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-*}
      - DISABLE_SSL_REDIRECT=True
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    volumes:
      - ./backend/media:/app/media
      - staticfiles:/app/staticfiles
    depends_on:
      - mysql
      - redis
    deploy:
      resources:
        limits:
          memory: 400M
        reservations:
          memory: 200M
    restart: unless-stopped

  # Celery Worker - 轻量配置（使用backend镜像）
  celery:
    image: ${REGISTRY:-registry.cn-hangzhou.aliyuncs.com}/bravo-project/backend:${IMAGE_TAG:-latest}
    container_name: ${COMPOSE_PROJECT_NAME:-bravo-prod}-celery
    command: sh -c "mkdir -p /var/log/django && chmod 777 /var/log/django && celery -A bravo worker -l warning --concurrency=1"
    environment:
      - DJANGO_SETTINGS_MODULE=bravo.settings.production
      - DB_NAME=${DB_NAME:-bravo_production}
      - DB_USER=${DB_USER:-bravo}
      - DB_PASSWORD=${DB_PASSWORD:-bravo_pass_2024}
      - DB_HOST=mysql
      - DB_PORT=3306
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SECRET_KEY=${DJANGO_SECRET_KEY}
    depends_on:
      - mysql
      - redis
    deploy:
      resources:
        limits:
          memory: 300M
        reservations:
          memory: 150M
    restart: unless-stopped

  # Vue前端 + Nginx - 使用预构建镜像
  frontend:
    image: ${REGISTRY:-registry.cn-hangzhou.aliyuncs.com}/bravo-project/frontend:${IMAGE_TAG:-latest}
    container_name: ${COMPOSE_PROJECT_NAME:-bravo-prod}-frontend
    ports:
      - "${FRONTEND_HTTP_PORT:-80}:80"
      - "${FRONTEND_HTTPS_PORT:-443}:443"
    volumes:
      - staticfiles:/usr/share/nginx/html/static:ro
      - ./backend/media:/usr/share/nginx/html/media
      # SSL证书挂载（如果使用域名）
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /var/www/certbot:/var/www/certbot:ro
    environment:
      - USE_DOMAIN=${USE_DOMAIN:-false}
      - DOMAIN_NAME=${DOMAIN_NAME:-}
    depends_on:
      - backend
    deploy:
      resources:
        limits:
          memory: 100M
        reservations:
          memory: 50M
    restart: unless-stopped

volumes:
  mysql_data:
  redis_data:
  staticfiles:
