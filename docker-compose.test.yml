version: "3.8"

services:
  # 预配置的MySQL服务
  mysql-test:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: bravo_test
      MYSQL_USER: bravo_user
      MYSQL_PASSWORD: bravo_password
      MYSQL_ROOT_PASSWORD: root_password
    tmpfs:
      - /var/lib/mysql # 使用内存存储，加速测试
    command: --default-authentication-plugin=mysql_native_password --skip-log-bin
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 3s
      retries: 10

  # 后端测试服务
  backend-test:
    build:
      context: ./backend
      dockerfile: Dockerfile.test
    depends_on:
      mysql-test:
        condition: service_healthy
    environment:
      DB_HOST: mysql-test
      DB_NAME: bravo_test
      DB_USER: bravo_user
      DB_PASSWORD: bravo_password
    volumes:
      - ./backend:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 5s
      timeout: 3s
      retries: 10

  # 前端构建服务
  frontend-build:
    build:
      context: ./frontend
      dockerfile: Dockerfile.test
    volumes:
      - ./frontend/dist:/app/dist
    command: npm run build
    restart: "no" # 构建完成后不重启

  # E2E测试服务
  e2e-tests:
    build:
      context: ./e2e
      dockerfile: Dockerfile.test
    depends_on:
      backend-test:
        condition: service_healthy
      frontend-build:
        condition: service_completed_successfully
    volumes:
      - ./e2e:/app
      - ./frontend/dist:/frontend-dist
    environment:
      BACKEND_URL: http://backend-test:8000
      FRONTEND_URL: http://localhost:3001
    command: |
      bash -c "
        echo '🚀 启动前端服务...'
        cd /frontend-dist && python -m http.server 3001 &

        echo '⏳ 等待服务就绪...'
        timeout 30 bash -c 'until curl -s http://backend-test:8000/health/; do sleep 1; done'
        timeout 30 bash -c 'until curl -s http://localhost:3001; do sleep 1; done'

        echo '🧪 运行关键E2E测试...'
        npx playwright test --grep '@critical' --project=chromium
      "
