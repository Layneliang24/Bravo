# 多阶段构建 - 生产环境前端
FROM node:20-alpine AS builder

WORKDIR /app

# 复制package文件
COPY package.json ./

# 安装依赖 (使用install因为没有package-lock.json)
RUN npm install --silent

# 复制源代码
COPY . .

# 构建生产版本
RUN npm run build

# 生产阶段 - 使用nginx
FROM nginx:alpine

# 安装curl用于健康检查
RUN apk add --no-cache curl

# 移除默认nginx配置
RUN rm /etc/nginx/conf.d/default.conf

# 复制构建结果
COPY --from=builder /app/dist /usr/share/nginx/html

# 复制nginx配置
COPY nginx.production.conf /etc/nginx/conf.d/default.conf

# 创建健康检查页面
RUN echo '<!DOCTYPE html><html><head><title>Health Check</title></head><body><h1>OK</h1></body></html>' > /usr/share/nginx/html/health

# 设置权限
RUN chown -R nginx:nginx /usr/share/nginx/html

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost/health || exit 1

# 暴露端口
EXPOSE 80 443

# 启动nginx
CMD ["nginx", "-g", "daemon off;"]
