# 预提交钩子配置模板

repos:
  # 🚀 快速语法和格式检查优先
  # 通用检查 - 快速失败
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
        exclude: "bandit-report.json"
      - id: check-yaml
      - id: check-json
      - id: check-merge-conflict
      - id: check-added-large-files
      - id: check-case-conflict
      - id: debug-statements

  # Python 代码格式化
  - repo: https://github.com/psf/black
    rev: 23.11.0
    hooks:
      - id: black
        language_version: python3.10

  # Python 导入排序
  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: ["--profile", "black"]

  # Python 代码检查
  - repo: https://github.com/pycqa/flake8
    rev: 6.1.0
    hooks:
      - id: flake8
        args: [--config=backend/.flake8]

  # Python 类型检查
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.7.1
    hooks:
      - id: mypy
        args:
          [
            --config-file=backend/pyproject.toml,
            --disable-error-code=var-annotated,
          ]
        additional_dependencies: ["django-stubs[mypy]"]
        files: ^backend/
        exclude: ^backend/(migrations|tests)/

  # Python 安全检查 (修复Windows编码问题)
  - repo: https://github.com/pycqa/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: ["-r", "backend/apps/", "-f", "json", "-o", "bandit-report.json"]
        exclude: "tests|test_"
        additional_dependencies: ["pbr"]
        pass_filenames: false

  # JavaScript/TypeScript 代码格式化
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.1.0
    hooks:
      - id: prettier
        files: \.(js|jsx|ts|tsx|json|css|scss|md|yml|yaml)$
        exclude: |
          (?x)^(
            docs/02_test_report/.*\.json$|
            docs/02_test_report/.*_report\.md$|
            .*temp_modifications.*\.json$|
            .*\.log$|
            .*\.report$
          )$

  # ESLint检查 - temporarily disabled
  # - repo: https://github.com/pre-commit/mirrors-eslint
  #   rev: v8.53.0
  #   hooks:
  #     - id: eslint
  #       files: ^frontend/.*\.(js|jsx|ts|tsx|vue)$
  #       args: ["frontend/**/*.{js,ts,vue}", "--config", "frontend/eslint.config.js"]
  #       additional_dependencies:
  #         - eslint@8.53.0
  #         - "@typescript-eslint/eslint-plugin@6.12.0"
  #         - "@typescript-eslint/parser@6.12.0"
  #         - "eslint-plugin-vue@9.18.1"

  # 🔍 重型检查最后执行
  # 全面代码质量检查 - 移到最后
  - repo: local
    hooks:
      - id: comprehensive-check
        name: Comprehensive code quality check
        entry: python scripts/code_change_tracker.py --validate-commit
        language: system
        pass_filenames: false
        always_run: true
        fail_fast: true

  # Docker 文件检查 (忽略非关键建议)
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        args:
          [
            --ignore,
            DL3008,
            --ignore,
            DL3009,
            --ignore,
            DL3015,
            --ignore,
            DL3018,
            --ignore,
            DL3059,
          ]

  # 提交信息检查
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.13.0
    hooks:
      - id: commitizen
        stages: [commit-msg]

  # 命名规则检查
  - repo: local
    hooks:
      - id: python-naming-check
        name: Python Naming Convention Check
        entry: python -m flake8 --select=N --config=backend/.flake8 backend/
        language: system
        files: ^backend/.*\.py$
        pass_filenames: false

      - id: python-pylint-naming
        name: Python Pylint Naming Check
        entry: python -m pylint --rcfile=backend/.pylintrc.naming --load-plugins=pylint.extensions.bad_builtin,pylint.extensions.check_elif,pylint.extensions.docparams,pylint.extensions.docstyle,pylint.extensions.empty_comment,pylint.extensions.mccabe,pylint.extensions.overlapping_exceptions,pylint.extensions.private_import,pylint.extensions.redefined_variable_type,pylint.extensions.typing,pylint.extensions.while_used --ignore=.venv,migrations,settings backend/apps/ backend/tests/
        language: system
        files: ^backend/(apps|tests)/.*\.py$
        pass_filenames: false

      - id: typescript-syntax-check
        name: TypeScript Syntax Check
        entry: bash -c 'echo "检查E2E TypeScript..." && cd e2e && npm run type-check && echo "E2E TypeScript语法检查通过"'
        language: system
        files: \.(ts|tsx|vue|json)$
        exclude: node_modules
        pass_filenames: false

      - id: github-actions-syntax-check
        name: GitHub Actions Workflow Syntax Check
        entry: bash -c 'echo "检查workflow语法..." && find .github/workflows -name "*.yml" -o -name "*.yaml" | xargs -I {} python -c "import yaml; yaml.safe_load(open(\"{}\", \"r\", encoding=\"utf-8\"))" && echo "语法检查通过"'
        language: system
        files: ^\.github/workflows/.*\.(yml|yaml)$
        pass_filenames: false

      - id: typescript-naming-check
        name: TypeScript Naming Convention Check
        entry: bash -c 'cd frontend && npx eslint'
        language: system
        files: ^frontend/src/.*\.(js|ts|vue)$
        pass_filenames: true

      - id: vue-naming-check
        name: Vue Naming Convention Check
        entry: bash -c 'cd frontend && npx eslint'
        language: system
        files: ^frontend/src/.*\.vue$
        pass_filenames: true

  # 本地目录守卫钩子
  - repo: local
    hooks:
      - id: root-clutter
        name: Root Clutter Guard (strict)
        entry: bash -c 'git diff --cached --name-only | grep -E "^[^/]+\.(md|txt|test_.*\.py|.*_test\.py|\.keep|\.example|\.backup|\.old|\.tmp|\.temp)$" | grep -v -E "^(README|CODE_OF_CONDUCT|CONTRIBUTING|SECURITY|CHANGELOG|LICENSE)\.md$" && echo "❌ 禁止在根目录添加临时文件，请放入 docs/ 或对应目录" && exit 1 || exit 0'
        language: system
        always_run: true
        fail_fast: true

  # 分支保护钩子
  - repo: local
    hooks:
      - id: branch-protection
        name: Branch Protection Check
        entry: bash scripts/branch_protection.sh
        language: system
        stages: [pre-push]
        always_run: true

      # 新增严格检查项
      - id: no-skip-verify
        name: Prevent --no-verify usage
        entry: bash -c 'if git log -1 --pretty=%B | grep -q "no-verify"; then echo "❌ 禁止使用 --no-verify 跳过检查" && exit 1; fi'
        language: system
        stages: [commit-msg]
        always_run: true

      - id: file-size-check
        name: Large file check (strict)
        entry: bash -c 'git diff --cached --name-only | xargs -I {} find {} -type f -size +5M 2>/dev/null | head -1 | grep . && echo "❌ 文件超过5MB，请使用Git LFS" && exit 1 || exit 0'
        language: system
        always_run: true

      - id: security-scan
        name: Basic security scan
        entry: echo "[INFO] Security scan skipped - scanner removed for code quality"
        language: system
        pass_filenames: false
        always_run: true
