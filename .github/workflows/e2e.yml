name: E2E Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    - cron: "0 2 * * *" # 每天凌晨2点运行

jobs:
  e2e-tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        browser: [chromium, firefox, webkit]

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: bravo_test
          MYSQL_USER: bravo_user
          MYSQL_PASSWORD: bravo_password
          MYSQL_ROOT_PASSWORD: root_password
        options: >-
          --health-cmd="mysqladmin ping -h localhost -u root -proot_password"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        ports:
          - 3306:3306

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Configure China Mirrors
        uses: ./.github/actions/configure-china-mirrors

      - name: Install backend dependencies
        run: |
          cd backend
          pip install -r requirements/test.txt

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install --ignore-scripts

      - name: Install E2E dependencies
        run: |
          cd e2e
          npm install --ignore-scripts

      - name: Install Playwright Browsers
        run: |
          cd e2e
          npx playwright install --with-deps ${{ matrix.browser }}

      - name: ⏳ Wait for MySQL and setup permissions
        run: |
          echo "⏳ Waiting for MySQL to be ready..."
          for i in {1..30}; do
            if mysqladmin ping -h 127.0.0.1 -P 3306 -u root -proot_password --silent; then
              echo "✅ MySQL is ready!"
              break
            fi
            echo "MySQL not ready, waiting... (attempt $i/30)"
            sleep 2
          done
          
          echo "🔐 Granting database privileges to bravo_user..."
          # Grant necessary privileges for Django testing (requires full DB management)
          mysql -h 127.0.0.1 -P 3306 -u root -proot_password -e "
            GRANT ALL PRIVILEGES ON \`test_%\`.* TO 'bravo_user'@'%';
            GRANT ALL PRIVILEGES ON \`bravo_test\`.* TO 'bravo_user'@'%';
            FLUSH PRIVILEGES;
          "
          echo "✅ Database privileges configured"

      - name: Prepare backend for E2E
        run: |
          cd backend
          python manage.py migrate
          echo "✅ Backend prepared for E2E"

      - name: Build frontend for E2E
        run: |
          cd frontend
          npm run build:skip-check || npm run build
          echo "✅ Frontend built for E2E"

      - name: Start backend server
        run: |
            cd backend
            echo "🔍 检查Django配置..."
            python manage.py check --settings=bravo.settings.test --verbosity=2 || echo "❌ Django check failed"
            echo "📋 显示已安装的应用..."
            python manage.py diffsettings --settings=bravo.settings.test | grep INSTALLED_APPS || echo "❌ Could not show installed apps"
            echo "🚀 启动Django服务器..."
            python manage.py runserver 8000 --settings=bravo.settings.test --verbosity=2 > django_server.log 2>&1 &
            BACKEND_PID=$!
            echo "Backend PID: $BACKEND_PID"
            sleep 15
            echo "📄 显示Django服务器日志..."
            cat django_server.log || echo "❌ Could not read Django server log"
            echo "✅ Backend server started on port 8000"
        env:
            DJANGO_SETTINGS_MODULE: bravo.settings.test
            DATABASE_URL: mysql://bravo_user:bravo_password@127.0.0.1:3306/bravo_test
            PYTHONPATH: ${{ github.workspace }}/backend

      - name: Start frontend server
        run: |
          cd frontend
          npm run preview -- --port 3001 --host 0.0.0.0 &
          sleep 5
          echo "✅ Frontend server started on port 3001"

      - name: Wait for services to be ready
        run: |
            echo "⏳ Waiting for services to be ready..."
            sleep 10
            
            echo "🔍 检查后端服务状态..."
            if ! curl -v http://localhost:8000/health/; then
              echo "❌ Backend health check failed"
              echo "📄 显示Django错误日志..."
              cat backend/django_server.log || echo "❌ Could not read Django server log"
              echo "🔍 尝试直接访问Django管理页面..."
              curl -v http://localhost:8000/admin/ || echo "❌ Django admin also failed"
            fi
            
            echo "🔍 检查后端根路径..."
            curl -v http://localhost:8000/ || echo "❌ Backend root check failed"
            
            echo "🔍 检查前端服务状态..."
            curl -v http://localhost:3001/ || echo "❌ Frontend health check failed"
            
            echo "📊 显示进程状态..."
            ps aux | grep -E "(python|node)" | grep -v grep || echo "No relevant processes found"
            
            echo "🌐 显示网络连接..."
            netstat -tlnp | grep -E "(8000|3001)" || echo "No services listening on expected ports"

      - name: Run E2E tests
        run: |
          cd e2e
          echo "🧪 Running E2E Tests (INFRASTRUCTURE FIRST)"
          npx playwright test --project=${{ matrix.browser }} --reporter=line
        env:
          CI: true
          TEST_BASE_URL: http://localhost:3001
          API_URL: http://localhost:8000
          NODE_ENV: test
        timeout-minutes: 15

      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report-${{ matrix.browser }}
          path: e2e/playwright-report/
          retention-days: 30

      - name: Upload test videos
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: playwright-videos-${{ matrix.browser }}
          path: e2e/test-results/
          retention-days: 7

  lighthouse-audit:
    runs-on: ubuntu-latest
    needs: e2e-tests

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Configure China Mirrors
        uses: ./.github/actions/configure-china-mirrors

      - name: Install dependencies
        run: |
          cd e2e
          npm install --ignore-scripts

      - name: Run Lighthouse audit
        run: |
          cd e2e
          npm run lighthouse

      - name: Upload Lighthouse report
        uses: actions/upload-artifact@v3
        with:
          name: lighthouse-report
          path: e2e/lighthouse-report/
          retention-days: 30
