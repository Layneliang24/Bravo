name: PR Validation - Fast Track

# 🚀 CI速度优化 - 快速PRvalidate工作流
# 专门处理 feature → dev 的PR，提供快速反馈
on:
  pull_request:
    branches: [dev] # 只处理向devbranch的PR (通常来自featurebranch)
    types: [opened, synchronize, reopened]
    # 🎯 优化：轻量级validate，确保基础代码质量
  workflow_dispatch: # 手动触发用于调试

# 并发控制，避免重复运行
concurrency:
  group: pr-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # 第一步：设置缓存 (并行基础)
  setup:
    name: Setup Cache & Environment
    # 快速反馈模式，为所有PR提供轻量级validate
    uses: ./.github/workflows/setup-cache.yml

  # 第二步：快速并行test (依赖setup)
  unit-tests-backend:
    name: Backend Unit Tests
    needs: setup
    uses: ./.github/workflows/test-unit-backend.yml
    with:
      coverage: true
      timeout: 10

  unit-tests-frontend:
    name: Frontend Unit Tests
    needs: setup
    uses: ./.github/workflows/test-unit-frontend.yml
    with:
      coverage: true
      timeout: 8

  # 第三步：集成test (依赖单元test) - 🚀 Phase 2优化版本
  integration-tests:
    name: Integration Tests (Optimized)
    needs: [unit-tests-backend, unit-tests-frontend]
    uses: ./.github/workflows/test-integration-optimized.yml
    with:
      timeout: 6 # 🎯 目标减少50%时间：12分钟 → 6分钟

  # 🎯 CI速度优化：移除E2Etest，交由branch-protection.yml处理完整validate

  # 第五步：质量门禁 (并行)
  directory-guard:
    name: Directory Protection
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Check Directory Rules
        run: |
          echo "Checking directory protection rules..."

          # 检查根目录新增文件
          forbidden_files=$(git diff --name-only origin/${{ github.base_ref }}...HEAD | grep -E '^[^/]+\.(md|txt|test_.*\.py|.*_test\.py|\.keep|\.example)$' || true)
          if [ -n "$forbidden_files" ]; then
            echo "ERROR: Root directory clutter detected:"
            echo "$forbidden_files"
            echo "Please move documentation to docs/ and tests to appropriate directories"
            exit 1
          fi

          echo "Directory protection check passed"

  # 第六步：PRvalidate汇总 - 🔥 紧急修复：所有PR都必须validate！
  pr-validation-summary:
    name: PR Validation Summary
    if: always() # 移除draft限制 - 所有PR都必须通过validate！
    runs-on: ubuntu-latest
    needs:
      [
        unit-tests-backend,
        unit-tests-frontend,
        integration-tests,
        directory-guard,
      ]
    steps:
      - name: Check All Results
        run: |
          echo "## PR Validation Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # 检查各个test结果
          BACKEND_STATUS="${{ needs.unit-tests-backend.result }}"
          FRONTEND_STATUS="${{ needs.unit-tests-frontend.result }}"
          INTEGRATION_STATUS="${{ needs.integration-tests.result }}"
          DIRECTORY_STATUS="${{ needs.directory-guard.result }}"

          echo "| Test Suite | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|------------|---------|" >> $GITHUB_STEP_SUMMARY
          echo "| Backend Unit Tests | $BACKEND_STATUS |" >> $GITHUB_STEP_SUMMARY
          echo "| Frontend Unit Tests | $FRONTEND_STATUS |" >> $GITHUB_STEP_SUMMARY
          echo "| Integration Tests | $INTEGRATION_STATUS |" >> $GITHUB_STEP_SUMMARY
          echo "| Directory Guard | $DIRECTORY_STATUS |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # 判断整体结果
          if [[ "$BACKEND_STATUS" == "success" && \
                "$FRONTEND_STATUS" == "success" && \
                "$INTEGRATION_STATUS" == "success" && \
                "$DIRECTORY_STATUS" == "success" ]]; then
            echo "✅ **All PR validations passed!**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "This PR is ready for review and can be safely merged." >> $GITHUB_STEP_SUMMARY
            echo "PR validation completed successfully"
          else
            echo "❌ **Some validations failed**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Please check the failed tests above and fix the issues before merging." >> $GITHUB_STEP_SUMMARY
            echo "PR validation failed - please fix issues"
            exit 1
          fi
