name: PR Validation - Fast Track

on:
  pull_request:
    branches: [main, dev]
    types: [opened, synchronize, reopened]

# 并发控制，避免重复运行
concurrency:
  group: pr-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # 第一步：设置缓存 (并行基础)
  setup:
    name: Setup Cache & Environment
    uses: ./.github/workflows/setup-cache.yml

  # 第二步：快速并行测试 (依赖setup)
  unit-tests-backend:
    name: Backend Unit Tests
    needs: setup
    uses: ./.github/workflows/test-unit-backend.yml
    with:
      coverage: true
      timeout: 10

  unit-tests-frontend:
    name: Frontend Unit Tests
    needs: setup
    uses: ./.github/workflows/test-unit-frontend.yml
    with:
      coverage: true
      timeout: 8

  # 第三步：集成测试 (依赖单元测试)
  integration-tests:
    name: Integration Tests
    needs: [unit-tests-backend, unit-tests-frontend]
    uses: ./.github/workflows/test-integration.yml
    with:
      timeout: 12

  # 第四步：烟雾E2E测试 (依赖集成测试)
  e2e-smoke:
    name: E2E Smoke Tests
    needs: integration-tests
    uses: ./.github/workflows/test-e2e-smoke.yml
    with:
      browser: "chromium"
      timeout: 15

  # 第五步：质量门禁 (并行)
  directory-guard:
    name: Directory Protection
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Check Directory Rules
        run: |
          echo "Checking directory protection rules..."

          # 检查根目录新增文件
          forbidden_files=$(git diff --name-only origin/${{ github.base_ref }}...HEAD | grep -E '^[^/]+\.(md|txt|test_.*\.py|.*_test\.py|\.keep|\.example)$' || true)
          if [ -n "$forbidden_files" ]; then
            echo "ERROR: Root directory clutter detected:"
            echo "$forbidden_files"
            echo "Please move documentation to docs/ and tests to appropriate directories"
            exit 1
          fi

          echo "Directory protection check passed"

  # 第六步：PR验证汇总
  pr-validation-summary:
    name: PR Validation Summary
    runs-on: ubuntu-latest
    needs:
      [
        unit-tests-backend,
        unit-tests-frontend,
        integration-tests,
        e2e-smoke,
        directory-guard,
      ]
    if: always()
    steps:
      - name: Check All Results
        run: |
          echo "## PR Validation Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # 检查各个测试结果
          BACKEND_STATUS="${{ needs.unit-tests-backend.result }}"
          FRONTEND_STATUS="${{ needs.unit-tests-frontend.result }}"
          INTEGRATION_STATUS="${{ needs.integration-tests.result }}"
          E2E_STATUS="${{ needs.e2e-smoke.result }}"
          DIRECTORY_STATUS="${{ needs.directory-guard.result }}"

          echo "| Test Suite | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|------------|---------|" >> $GITHUB_STEP_SUMMARY
          echo "| Backend Unit Tests | $BACKEND_STATUS |" >> $GITHUB_STEP_SUMMARY
          echo "| Frontend Unit Tests | $FRONTEND_STATUS |" >> $GITHUB_STEP_SUMMARY
          echo "| Integration Tests | $INTEGRATION_STATUS |" >> $GITHUB_STEP_SUMMARY
          echo "| E2E Smoke Tests | $E2E_STATUS |" >> $GITHUB_STEP_SUMMARY
          echo "| Directory Guard | $DIRECTORY_STATUS |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # 判断整体结果
          if [[ "$BACKEND_STATUS" == "success" && \
                "$FRONTEND_STATUS" == "success" && \
                "$INTEGRATION_STATUS" == "success" && \
                "$E2E_STATUS" == "success" && \
                "$DIRECTORY_STATUS" == "success" ]]; then
            echo "✅ **All PR validations passed!**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "This PR is ready for review and can be safely merged." >> $GITHUB_STEP_SUMMARY
            echo "PR validation completed successfully"
          else
            echo "❌ **Some validations failed**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Please check the failed tests above and fix the issues before merging." >> $GITHUB_STEP_SUMMARY
            echo "PR validation failed - please fix issues"
            exit 1
          fi
