name: Regression Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # 每天凌晨2点运行回归测试
    - cron: "0 2 * * *"
  workflow_call:
  workflow_dispatch:
    inputs:
      test_type:
        description: "测试类型"
        required: false
        default: "all"
        type: choice
        options:
          - all
          - api
          - ui
          - db
      update_baselines:
        description: "更新基线快照"
        required: false
        default: false
        type: boolean

jobs:
  regression-tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: bravo_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:6
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: |
            frontend/package-lock.json
            e2e/package-lock.json

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install Python dependencies
        run: |
          cd backend
          pip install -r requirements/test.txt

      - name: Install Frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Install E2E dependencies
        run: |
          cd e2e
          npm ci

      - name: Set up test environment
        run: |
          cp .env.test .env
          mkdir -p tests/reports
          mkdir -p tests/coverage

      - name: Run database migrations
        run: |
          cd backend
          python manage.py migrate --settings=bravo.settings.test

      - name: Load test fixtures
        run: |
          cd backend
          python manage.py loaddata tests/fixtures/test_data.json --settings=bravo.settings.test

      - name: Run API regression tests
        if: ${{ inputs.test_type == 'all' || inputs.test_type == 'api' }}
        run: |
          cd tests/regression
          python -m pytest api/ -v --tb=short --junitxml=../reports/api-regression-junit.xml

      - name: Run UI regression tests
        if: ${{ inputs.test_type == 'all' || inputs.test_type == 'ui' }}
        run: |
          cd tests/regression
          python -m pytest ui/ -v --tb=short --junitxml=../reports/ui-regression-junit.xml

      - name: Run database regression tests
        if: ${{ inputs.test_type == 'all' || inputs.test_type == 'db' }}
        run: |
          cd tests/regression
          python -m pytest tests/ -v --tb=short --junitxml=../reports/db-regression-junit.xml

      - name: Update baselines
        if: ${{ inputs.update_baselines == 'true' }}
        run: |
          cd tests/regression
          python utils/update_baselines.py

      - name: Generate regression report
        if: always()
        run: |
          cd tests/regression
          python utils/generate_report.py

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: regression-test-results-${{ matrix.node-version }}
          path: |
            tests/reports/
            tests/regression/reports/
          retention-days: 30

      - name: Upload updated baselines
        if: ${{ inputs.update_baselines == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: updated-baselines-${{ matrix.node-version }}
          path: tests/regression/config/baselines/
          retention-days: 7

      - name: Comment PR with results
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = 'tests/regression/reports/summary.json';
            if (fs.existsSync(path)) {
              const summary = JSON.parse(fs.readFileSync(path, 'utf8'));
              const comment = `## 🧪 回归测试结果\n\n` +
                `- **总测试数**: ${summary.total}\n` +
                `- **通过**: ${summary.passed}\n` +
                `- **失败**: ${summary.failed}\n` +
                `- **跳过**: ${summary.skipped}\n\n` +
                `详细报告请查看 [测试结果](${summary.report_url})`;

              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }
