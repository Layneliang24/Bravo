name: 🐳 Build and Push Docker Images

# 在代码合并到dev或main后构建并推送镜像
on:
  push:
    branches:
      - dev
      - main
    paths:
      - "backend/**"
      - "frontend/**"
      - "docker-compose.prod.yml"
      - ".github/workflows/build-and-push-images.yml"
      - ".github/workflows/deploy-dev.yml"
      - ".github/workflows/deploy-production.yml"

  # 手动触发
  workflow_dispatch:
    inputs:
      environment:
        description: "目标环境"
        required: true
        type: choice
        options:
          - dev
          - production

env:
  REGISTRY: crpi-noqbdktswju6cuew.cn-shenzhen.personal.cr.aliyuncs.com
  NAMESPACE: bravo-project

jobs:
  build-and-push:
    name: 构建并推送Docker镜像
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: 设置镜像标签
        id: tags
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          SHORT_SHA=${GITHUB_SHA::8}

          if [ "$BRANCH_NAME" = "main" ]; then
            # 生产环境：使用版本号和latest
            VERSION=$(date +%Y.%m.%d)-${SHORT_SHA}
            BACKEND_TAGS="${REGISTRY}/${NAMESPACE}/backend:${VERSION},${REGISTRY}/${NAMESPACE}/backend:latest"
            FRONTEND_TAGS="${REGISTRY}/${NAMESPACE}/frontend:${VERSION},${REGISTRY}/${NAMESPACE}/frontend:latest"
            echo "environment=production" >> $GITHUB_OUTPUT
          else
            # 开发环境：使用dev和dev-sha
            BACKEND_TAGS="${REGISTRY}/${NAMESPACE}/backend:dev-${SHORT_SHA},${REGISTRY}/${NAMESPACE}/backend:dev"
            FRONTEND_TAGS="${REGISTRY}/${NAMESPACE}/frontend:dev-${SHORT_SHA},${REGISTRY}/${NAMESPACE}/frontend:dev"
            echo "environment=dev" >> $GITHUB_OUTPUT
          fi

          echo "backend_tags=${BACKEND_TAGS}" >> $GITHUB_OUTPUT
          echo "frontend_tags=${FRONTEND_TAGS}" >> $GITHUB_OUTPUT
          echo "version=${VERSION:-dev-${SHORT_SHA}}" >> $GITHUB_OUTPUT

          echo "📦 Backend镜像标签: ${BACKEND_TAGS}"
          echo "📦 Frontend镜像标签: ${FRONTEND_TAGS}"

      - name: 设置Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 登录阿里云容器镜像服务
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.ALIYUN_REGISTRY_USERNAME }}
          password: ${{ secrets.ALIYUN_REGISTRY_PASSWORD }}

      - name: 构建并推送Backend镜像
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile.prod
          push: true
          tags: ${{ steps.tags.outputs.backend_tags }}
          labels: |
            org.opencontainers.image.source=${{ github.repositoryUrl }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.version=${{ steps.tags.outputs.version }}

      - name: 构建并推送Frontend镜像
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile.prod
          push: true
          tags: ${{ steps.tags.outputs.frontend_tags }}
          labels: |
            org.opencontainers.image.source=${{ github.repositoryUrl }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.version=${{ steps.tags.outputs.version }}

      - name: 镜像构建成功通知
        run: |
          echo "✅ 镜像构建成功！"
          echo ""
          echo "🏷️  版本: ${{ steps.tags.outputs.version }}"
          echo "🌍 环境: ${{ steps.tags.outputs.environment }}"
          echo ""
          echo "📦 Backend镜像:"
          echo "   ${{ steps.tags.outputs.backend_tags }}"
          echo ""
          echo "📦 Frontend镜像:"
          echo "   ${{ steps.tags.outputs.frontend_tags }}"
          echo ""
          echo "🚀 后续将自动触发部署流程..."
