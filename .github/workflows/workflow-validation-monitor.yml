name: Workflow Validation Monitor

# 监控工作流文件变更并自动验证
on:
  pull_request:
    paths:
      - ".github/workflows/**"
  push:
    branches:
      - main
      - dev
    paths:
      - ".github/workflows/**"

jobs:
  detect-workflow-changes:
    name: "Detect Workflow Changes"
    runs-on: ubuntu-latest
    outputs:
      changed-workflows: ${{ steps.detect.outputs.workflows }}
      has-changes: ${{ steps.detect.outputs.has_changes }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect Changed Workflows
        id: detect
        run: |
          echo "🔍 检测工作流文件变更..."

          if [ "${{ github.event_name }}" == "pull_request" ]; then
            BASE_SHA="${{ github.event.pull_request.base.sha }}"
            HEAD_SHA="${{ github.event.pull_request.head.sha }}"
          else
            BASE_SHA="${{ github.event.before }}"
            HEAD_SHA="${{ github.sha }}"
          fi

          CHANGED_WORKFLOWS=$(git diff --name-only "$BASE_SHA" "$HEAD_SHA" | grep "^.github/workflows/.*\.yml$" || true)

          if [ -n "$CHANGED_WORKFLOWS" ]; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "workflows<<EOF" >> $GITHUB_OUTPUT
            echo "$CHANGED_WORKFLOWS" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT

            echo "📋 检测到以下工作流变更:"
            echo "$CHANGED_WORKFLOWS" | while read -r file; do
              echo "  - $file"
            done
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "workflows=" >> $GITHUB_OUTPUT
            echo "ℹ️  未检测到工作流文件变更"
          fi

  validate-syntax:
    name: "Validate Workflow Syntax"
    needs: detect-workflow-changes
    if: needs.detect-workflow-changes.outputs.has-changes == 'true'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup act
        run: |
          echo "📦 安装act..."
          curl -s https://raw.githubusercontent.com/nektos/act/master/install.sh | sudo bash
          act --version

      - name: Validate with act
        run: |
          echo "🧪 使用act验证工作流语法..."
          echo ""

          FAILED=0
          echo "${{ needs.detect-workflow-changes.outputs.changed-workflows }}" | while read -r workflow; do
            if [ -n "$workflow" ]; then
              echo "验证: $workflow"
              echo "---"

              # 列出jobs
              if act -l -W "$workflow" > /tmp/act-list.txt 2>&1; then
                JOB_COUNT=$(grep -c "^[0-9]" /tmp/act-list.txt || echo "0")
                echo "✓ 发现 $JOB_COUNT 个jobs"
              else
                echo "✗ 无法列出jobs"
                FAILED=1
              fi

              echo ""
            fi
          done

          if [ $FAILED -eq 0 ]; then
            echo "✅ 所有工作流语法验证通过"
          else
            echo "❌ 工作流语法验证失败"
            exit 1
          fi

  validate-structure:
    name: "Validate Workflow Structure"
    needs: detect-workflow-changes
    if: needs.detect-workflow-changes.outputs.has-changes == 'true'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Validate Structure
        run: |
          echo "🔍 验证工作流结构..."
          echo ""

          FAILED=0
          echo "${{ needs.detect-workflow-changes.outputs.changed-workflows }}" | while read -r workflow; do
            if [ -n "$workflow" ]; then
              echo "验证: $workflow"
              echo "---"

              # 检查必要字段
              ERRORS=0

              if ! grep -q "^name:" "$workflow"; then
                echo "✗ 缺少 'name' 字段"
                ERRORS=1
              fi

              if ! grep -q "^on:" "$workflow" && ! grep -q "^\"on\":" "$workflow"; then
                echo "✗ 缺少 'on' 触发器"
                ERRORS=1
              fi

              if ! grep -q "^jobs:" "$workflow"; then
                echo "✗ 缺少 'jobs' 定义"
                ERRORS=1
              fi

              if [ $ERRORS -eq 0 ]; then
                echo "✓ 结构完整"
              else
                FAILED=1
              fi

              echo ""
            fi
          done

          if [ $FAILED -eq 0 ]; then
            echo "✅ 所有工作流结构验证通过"
          else
            echo "❌ 工作流结构验证失败"
            exit 1
          fi

  compare-with-documentation:
    name: "Compare with Documentation"
    needs: [detect-workflow-changes, validate-syntax, validate-structure]
    if: needs.detect-workflow-changes.outputs.has-changes == 'true'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Check Documentation Update
        run: |
          echo "📚 检查文档是否需要更新..."

          # 检查是否有文档更新
          CHANGED_DOCS=$(git diff --name-only HEAD~1 | grep "docs/workflow/" || true)

          if [ -z "$CHANGED_DOCS" ]; then
            echo "⚠️  警告: 工作流已修改，但未发现文档更新"
            echo ""
            echo "💡 建议:"
            echo "  • 检查 docs/workflow/ 下的文档是否需要更新"
            echo "  • 更新场景验证文档中的检查项列表"
            echo "  • 运行实际验证确认文档准确性"
            echo ""
            echo "此检查仅为提醒，不会阻止合并"
          else
            echo "✓ 检测到文档更新: $CHANGED_DOCS"
          fi

  validation-summary:
    name: "Validation Summary"
    needs: [validate-syntax, validate-structure, compare-with-documentation]
    if: always() && needs.detect-workflow-changes.outputs.has-changes == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Generate Summary
        run: |
          echo "# 工作流验证报告" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          echo "## 验证结果" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ needs.validate-syntax.result }}" == "success" ]; then
            echo "✅ 语法验证: 通过" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ 语法验证: 失败" >> $GITHUB_STEP_SUMMARY
          fi

          if [ "${{ needs.validate-structure.result }}" == "success" ]; then
            echo "✅ 结构验证: 通过" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ 结构验证: 失败" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 变更的工作流" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "${{ needs.detect-workflow-changes.outputs.changed-workflows }}" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

          # 检查是否有失败
          if [ "${{ needs.validate-syntax.result }}" != "success" ] || [ "${{ needs.validate-structure.result }}" != "success" ]; then
            echo "❌ 工作流验证失败"
            exit 1
          else
            echo "✅ 所有验证通过"
          fi

  # 提醒需要完整验证
  remind-full-validation:
    name: "Remind Full Validation"
    needs: validation-summary
    if: success()
    runs-on: ubuntu-latest

    steps:
      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '## ✅ 工作流验证通过\n\n' +
                    '**自动验证完成:**\n' +
                    '- ✅ 语法验证（act）\n' +
                    '- ✅ 结构验证\n\n' +
                    '**💡 建议:**\n' +
                    '- 合并后，监控实际运行结果确认准确性\n' +
                    '- 检查触发的jobs数量和检查项是否符合预期\n' +
                    '- 更新文档记录任何变更\n\n' +
                    '**📊 查看详细报告:**\n' +
                    '查看 Actions 标签页的 Summary 部分'
            })
