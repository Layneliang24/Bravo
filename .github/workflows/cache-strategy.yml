# 统一缓存策略 - 可重用的workflow
name: Cache Strategy

on:
  workflow_call:
    inputs:
      cache-type:
        required: true
        type: string
        description: "缓存类型: dependencies, playwright, test-results"
      cache-scope:
        required: false
        type: string
        default: "full"
        description: "缓存范围: full, frontend, backend, e2e"

jobs:
  setup-cache:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Dependencies Cache
        if: inputs.cache-type == 'dependencies' || inputs.cache-type == 'full'
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            node_modules
            backend/.venv
            frontend/node_modules
          key: deps-${{ runner.os }}-${{ hashFiles('**/package-lock.json', 'backend/requirements/*.txt') }}
          restore-keys: |
            deps-${{ runner.os }}-

      - name: Setup Playwright Cache
        if: inputs.cache-type == 'playwright' || inputs.cache-type == 'full'
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/ms-playwright
            e2e/node_modules
          key: playwright-${{ runner.os }}-${{ hashFiles('e2e/package-lock.json') }}
          restore-keys: |
            playwright-${{ runner.os }}-

      - name: Setup Test Results Cache
        if: inputs.cache-type == 'test-results' || inputs.cache-type == 'full'
        uses: actions/cache@v4
        with:
          path: |
            backend/htmlcov
            frontend/coverage
            e2e/test-results
            e2e/playwright-report
          key: test-results-${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            test-results-${{ runner.os }}-

      - name: Install Missing Dependencies
        if: inputs.cache-type == 'playwright'
        run: |
          echo "🎭 检查并安装Playwright浏览器..."
          if [ ! -d "$HOME/.cache/ms-playwright" ] || [ -z "$(ls -A $HOME/.cache/ms-playwright 2>/dev/null)" ]; then
            echo "📦 Playwright浏览器缓存不存在，开始安装..."
            cd e2e && npm ci --prefer-offline --no-audit
            npx playwright install chromium
            echo "✅ Playwright浏览器安装完成"
          else
            echo "✅ Playwright浏览器缓存已存在，跳过安装"
          fi
